Skyshop 1.05 Change Log
=====================
Major Features
 - Box Projected Cubemaps (Beta)
 - Spherical Harmonics Diffuse IBL (Beta)
 - Skin Shader (Beta)
 - Anisotropic Highlights (Beta, skin shader only)
 - HDR Render to Cubemap
 - Fixed Prefabs

Script
 - Skyshop no longer clears inputs and settings when entering play mode
 - Added Apply(Renderer target) function to Sky script for per-object Sky binding
 - Added diffuse spherical harmonic computation to happen automatically in the SkyInspector
 - Added undo helpers into Util to conform to both Unity 4.2 and Unity 4.3 undo API
 - Cleaned up Undo and made it more specific in a few cases
 - Fixed non-mipmapped specular preview bug in SkyInspector
 - Fixed mset_BeastConfig unreferenced leak
 - Added UniformOcclusion shader parameter that can be set per object
 - Added Sky.Apply to drawGizmosSelected for sky changes without an open inspector tab
 - Cleaned up and refactored Sky.cs
 - Added proper serialization support to a whole list of classes
 
Edit/Skyshop
 - "Create Prefabs from Selected" will create prefabs from all selected skies (required for old skies).

Shaders
 - Added "Beta" shader category for new shaders that are not quite production-ready
 - Added Box Projection Cube-Mapping (Beta)
 - Added diffuse spherical harmonics (Beta)
 - Added SH-based skin shader (Beta)
 - Added anisotropic direct light specular (Beta, skin shader only)
 - Removed manual sRGB sampling code from grass & detail shaders (Unity 4.3 fixed a bug)
 - Fixed invalid fallback paths in mobile & terrain shaders
 - Made non-blended shaders output alpha of 1.0
 - Disabled lightmapping in mobile bumped-spec shaders that use vertex colors/occlusion (too many interpolators)

New shader feature #defines
 - #define MARMO_BOX_PROJECTION 1
 - #define MARMO_SPHERICAL_HARMONICS 1
 - #define MARMO_ALPHA

Alpha
 - Shaders will write 1.0 into the output alpha unless this flag is defined

Box Projection
 - Shaders with box projection enabled treat the Sky as being a box with finite dimensions
 - Sky object's transform scale defines the bounds of the projection box
 - Does not yet work with vertex-lit shaders
 - Enabled with #define MARMO_BOX_PROJECTION 1 (Note: the 1 is new and important)
 - Can also be toggled as a multi-compile keyword
 - This feature is considered beta and only enabled in the beta category of shaders

Spherical Harmonics
 - All skies now compute spherical harmonics coefficients to be used in place of the diffuse IBL cubemap
 - SH is computed from the specular, skybox, or diffuse cube depending on which is present
 - SH is computed automatically in the Sky Inspector, no recomputation necessary for older content.
 - SH will be used in place of the diffuse IBL cubemap in shaders that enable the feature
 - Enabled with #define MARMO_SPHERICAL_HARMONICS 1
 - This feature is considered beta and only enabled in the beta category of shaders

Known Issues
 - Unity 4.2 grass & detail shaders are now rendered incorrectly, they still need manual sRGB sampling which was fixed in Unity 4.3.0.
 - Old Sky objects cannot be turned into prefabs (they lose script references), use Edit->Skyshop->Create Prefabs from Selected
 - RGBM probe does not capture transparent objects
 - RGBM probe does not capture tree or grass billboards properly
 - RGBM probe captures converts non-Marmoset shaders to Marmoset ones when rendering (by-product of replacement shaders)


Skyshop 1.04.1 Change Log
=======================
Shaders
 - Added Mobile/Occlusion/ shaders
 - Fixed Self-Illumin shader fallbacks & shadows
 - Removed blending from Transparent/Cutout (conforms to Unity & fixes shadows)
 - Added "approxview" to all mobile shaders & fallbacks
 - Fixed Mobile/Fast shader typos 
Menus
 - Changed "Refresh Skies" shortcut to ctrl+shift+R (ctrl+R is taken)



Skyshop 1.04 Change Log
=======================

Moved Unity requirements to Unity 4.2+
- Email support@marmoset.co to request a legacy build
- Legacy build will not include terrain shaders


SHADERS
New shader feature #defines
 - #define MARMO_OCCLUSION
 - #define MARMO_VERTEX_COLOR
 - #define MARMO_VERTEX_AO

Ambient Occlusion Map
 - Diffuse IBL occlusion in red channel
 - Specular IBL occlusion in green channel
 - Uses secondary UV set (texcoord1)
 - Enabled in shaders with #define MARMO_OCCLUSION
 - Shaders found in Marmoset/Occlusion/ category
 
Vertex Colors
 - Vertex color can modify diffuse color
 - Enabled with #define MARMO_VERTEX_COLOR
 - Shaders found in Marmoset/Vertex Color/ category
 
Vertex Occlusion
 - Vertex color can occlude image-based lighting
 - Diffuse & specular IBL can be occluded separately using R & G channels
 - Enabled with #define MARMO_VERTEX_OCCLUSION
 - Shaders found in Marmoset/Vertex Occlusion/ category
  
Terrain Shaders
 - Unity-style simple terrain shader + IBL
 - Advanced Terrain shader
   * Per-layer specular maps & controls
   * Base normalmap (covers entire terrain)
   * Base diffuse & AO map
   * Diffuse & specular fresnel
 - Optimized distant terrain shaders
 - Usable on non-terrain meshes
 - Shaders found in Marmoset/Terrain/ category
 
Vegetation Shaders
 - Waving grass shader
 - Detail mesh shaders
 - Soft Occlusion tree shaders
 - Tree Creator shaders
 - Detail & grass shaders are replaced automatically
 - Shaders found in Marmoset/Nature/ category

Vertex-Lit shaders
 - Super-fast
 - Shader-Model 2.0
 - Vertex-Lit diffuse + IBL
 - Vertex-Lit diffuse + diffuse & specular IBL
 - Vertex-Lit diffuse + AO + diffuse & specular IBL
 - Shaders found in Marmoset/Vertex Lit/ category

Sky-dome Shader
- For using the HDR sky cubemap with geometry 

Combined Diff & Spec Texture
 - Diffuse & specular maps sampled from the same texture
 - Diffuse color in RGB, A used as both specular mask & gloss
 - Enabled with #define MARMO_DIFFUSE_SPECULAR_COMBINED
 - Used by Marmoset/Vertex Lit/ and Marmoset/Mobile/...Fast IBL shaders


MOBILE
 - Mipmap gloss support for iOS, hazaa!
 - Mipmap gloss support for Android devices that support it (not many)
 - Added Specular Fast & Bumped Specular Fast shaders with extreme mobile optimizations
 - Improved fast fresnel approximation to match desktop shaders
 - Improved Android support (with fallbacks in case of mipmap gloss failure)


LIGHTMAPPING
Full directional lightmap support
 - Specular & gloss maps now affect dir lightmapped specular

Added Lightmapped Diffuse & Lightmapped Specular Multiplier sliders
 - Weights how much IBL is used on lightmapped surfaces


MENU FEATURES
Edit -> Skyshop -> Refresh Scene Skies
 - Updates color-space on all skies in the scene
 - Applies a sky if none are active (everything is black problem)

Edit -> Skyshop ->  Upgrade Scene Skies
 - Converts all skies in the scene to use the latest Skyshop features
 - Part of namespaced scripting fix

Edit -> Skyshop -> Convert Scene to Mobile/Standard
 - Goes through all materials referenced in the current scene
 - Replaces all uses of standard Marmoset shaders with Marmoset Mobile ones (or vice versa)

Edit -> Skyshop -> Convert Project to Mobile/Standard
 - Goes through all material assets in the entire project
 - Replaces all uses of standard Marmoset shaders with Marmoset Mobile ones (or vice versa)

Edit -> Terrain ->  Import/Export Splatmap
 - Saves and loads PNG images as weight maps for terrain texture layers
 - Useful for working with external terrain generation tools

BUGS & MISC.
 - Proper namespacing in scripts to prevent conflicts with other third-party code
 - Fixed deferred, Specular IBL fresnel bug
 - Fixed Mobile Specular IBL shadow bug
 - Fixed transparency + fog bug
 - Fixed Simple Glass diffuse bug
 - Changed skybox texture coords to float3 for consoles
 - MarmosetCore now knows about MarmosetInput globals
 - Substance specular maps now work with Marmoset shaders (fixed in Substance).
 - Fixed an Android "everything is black" bug (hlsl2glsl hates _ variable prefix).
 - DIRECT_DIFFUSE & DIRECT_SPECULAR properly separated from IBL, can actually be toggled now.